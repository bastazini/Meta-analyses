#Random effect models
require(metafor)

##Importing data
dados=read.table(pipe("pbpaste"), sep="\t", header=T)



##Calculating effect size
####Alfa
##effect size Richness
effect.size.alfa=escalc(measure = "ROM", n1i =  samplecontrol, n2i = samplewarming, m1i = mean_alfa_control, 
                        m2i = mean_alfa_warming , sd1i = sd_alfa_control, sd2i = sd_alfa_warming, data=dados)

##effect size ENS.Pie
effect.size.ens=escalc(measure = "ROM", n1i =  samplecontrol, n2i = samplewarming, m1i = mean_ens_control, 
                       m2i = mean_ens_warming , sd1i = sd_ens_control, sd2i = sd_ens_warming, data=dados)
####Beta

##effect size nestdeness
effect.size.nest=escalc(measure = "ROM", n1i = samplecontrol, n2i = samplewarming, m1i = mean_nest_control, 
                        m2i = mean_nest_warming, sd1i = sd_nest_control, sd2i = sd_nest_warming, data=dados)


##effect size turnover
effect.size.turn=escalc(measure = "ROM", n1i = samplecontrol, n2i = samplewarming, m1i = mean_turn_control, 
                        m2i = mean_turn_warming, sd1i =  sd_turn_control, sd2i =sd_turn_warming, data=dados)


#effect size gradient(nestdmess)
effect.size.grad=escalc(measure = "ROM", n1i = samplecontrol, n2i = samplewarming, m1i = mean_grad_control , 
                        m2i = mean_grad_warming, sd1i = sd_grad_control, sd2i = sd_grad_warming, data=dados)

##effect size turnover (balanced variation of abundance)
effect.size.bal=escalc(measure = "ROM", n1i = samplecontrol, n2i = samplewarming, m1i = mean_abund_control, 
                       m2i = mean_bal_warming, sd1i = sd_abund_control, sd2i = sd_bal_warming, data=dados)

